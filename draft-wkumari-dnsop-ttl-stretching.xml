<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY rfc2119 PUBLIC "" ".//reference.RFC.2119.xml">
]>
<!-- WK: Set category, IPR, docName -->
<rfc category="info" docName="draft-wkumari-dnsop-ttl-stretching-00"
     ipr="trust200902">
  <?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

  <?rfc toc="yes" ?>

  <?rfc symrefs="yes" ?>

  <?rfc sortrefs="yes"?>

  <?rfc iprnotified="no" ?>

  <?rfc strict="yes"?>

  <?rfc compact="yes" ?>

  <front>
    <!-- WK: Set long title. -->

    <title abbrev="TTL Stretchng">Stretching DNS TTLs</title>

    <author fullname="Warren Kumari" initials="W." surname="Kumari">
      <organization>Google</organization>

      <address>
        <postal>
          <street>1600 Amphitheatre Parkway</street>

          <city>Mountain View, CA</city>

          <code>94043</code>

          <country>US</country>
        </postal>

        <email>warren@kumari.net</email>
      </address>
    </author>

    <date day="30" month="January" year="2014"/>

    <abstract>
      <t>The TTL of a DNS Resource Record expresses how long a record may be
      cached before it should be discarded. This document discusses the
      possibility of "stretching TTLS" (using them past their expiration) if
      they cannot be refreshed. This works on the assumption that stale data
      may be better than no data. </t>

      <t>PLEASE NOTE: This document is a strawman to drive discussion. It may
      or may not be a good idea, this document documents the idea so that
      there is something concrete to throw tomatoes at.</t>

      <t>[ Ed note: Text inside square brackets ([]) is additional background
      information, answers to freqently asked questions, general musings, etc.
      They will be removed before publication. This document is being
      collaborated on in Github at:
      https://github.com/wkumari/draft-wkumari-dnsop-ttl-stretching. The most
      recent version of the document, open issues, etc should all be available
      here. The authors (gratefully) accept pull requests ]</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>DNS Resource Records (RR) have an associated TTL. This is how long
      the record may be cached before it should be expired and new information
      fetched. This is based upon the assumption that the authorative servers
      will be reachable when they are needed, and that records expire and are
      immediatly evicted from the cache.</t>

      <t>There are a number of reasons why an authorative server may become
      unreachable, including, unfortunalty, Denial of Service (DoS) attacks.
      Recent proposals, for exmaple "Highly Automated Method for Maintaining
      Expiring Records" (<xref target="I-D.wkumari-dnsop-hammer"/>) propose
      refreshing records in the cache before they expire and are evicted. This
      means that the recursive server still has information in its cache when
      it attempts to contact the authorative server. </t>

      <t>This document suggests that, if the recursive server is unable to
      contact the authorative server, it simply extends the existing records
      TTL, on the assumption that "stale bread if better than no bread". </t>

      <t>[Ed: This is the primary point of the document / question -- if you
      cannot reach the authorative nameservers (perhaps they are under a DoS,
      perhaps they were unplugged, you cannot really tell) it is better to use
      the last known (and perhaps outdated) information, or is it better for
      the domain to do dark? I tihnk the former, but this is a significant
      change to the meaning / semantics of TTLs).</t>

      <section title="Requirements notation">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref
        target="RFC2119"/>.</t>
      </section>
    </section>

    <section title="Proposal">
      <t>If a recursive nameserver is unable to contact any of the authorative
      nameservers for a zone, and it still has the resource record cached, it
      MAY "stretch" the TTL by simply increasing it it by the original TTL. It
      may do this N times, where N should be configurable.</t>

      <t>[ Ed: I was going to say "by doubling the TTL", but then if we allow
      implmentations to do this e.g 3 times, is that 4 times the original TTL,
      or is it 2^3 the original TTL].</t>
    </section>

    <section title="IANA Considerations">
      <t>This document contains no IANA considerations.Template: Fill this
      in!</t>
    </section>

    <section anchor="security" title="Security Considerations">
      <t>TODO: Fill this out!</t>
    </section>

    <section title="Acknowledgements">
      <t>The authors wish to thank some folk.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include='reference.RFC.2119'?>

      <reference anchor="IANA.AS_Numbers"
                 target="http://www.iana.org/assignments/as-numbers">
        <front>
          <title abbrev="Autonomous System (AS) Numbers">Autonomous System
          (AS) Numbers</title>

          <author>
            <organization>IANA</organization>
          </author>

          <date/>
        </front>
      </reference>
    </references>

    <references title="Informative References">
      <?rfc include='reference.I-D.draft-ietf-sidr-iana-objects-03.xml'
?>

      <?rfc include='reference.I-D.draft-wkumari-dnsop-hammer-00.xml'?>
    </references>

    <section title="Changes / Author Notes.">
      <t>[RFC Editor: Please remove this section before publication ]</t>

      <t>From -00 to -01</t>

      <t><list style="symbols">
          <t>Nothing changed in the template!</t>
        </list></t>
    </section>
  </back>
</rfc>
